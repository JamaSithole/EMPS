<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009"
		   xmlns:s="library://ns.adobe.com/flex/spark"
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   width="100%" height="100%" borderVisible="false" chromeColor="#0F4700"
		   creationComplete="init()" defaultButton="{bntLogin}">

<fx:Script>
	<![CDATA[
		import co.za.ngwane.epms.helper.EPMSSingleton;
		import co.za.ngwane.epms.helper.Helper;
		import co.za.ngwane.epms.helper.Status;
		import co.za.ngwane.epms.repository.Clustertbl;
		import co.za.ngwane.epms.repository.Dept;
		import co.za.ngwane.epms.repository.Directorate;
		import co.za.ngwane.epms.repository.Ndp;
		import co.za.ngwane.epms.repository.Plantbl;
		import co.za.ngwane.epms.repository.Progtbl;
		import co.za.ngwane.epms.repository.Sectiontbl;
		import co.za.ngwane.epms.repository.Userepms;
		
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.core.Application;
		import mx.core.FlexGlobals;
		import mx.core.IFlexDisplayObject;
		import mx.managers.PopUpManager;
		import mx.rpc.events.FaultEvent;
		import mx.rpc.events.ResultEvent;
		import mx.rpc.remoting.RemoteObject;
		import mx.skins.halo.WindowBackground;
		import mx.utils.ObjectUtil;
		import mx.utils.StringUtil;
		
		import spark.components.Application;
		
		public function init():void
		{
			
		}
		
		//Close application when clicking the cancel button
		public function cancel():void
		{
			FlexGlobals.topLevelApplication.exit();
		}
		
		public function userLogin(): void
		{
			var user : co.za.ngwane.epms.repository.Userepms  = new co.za.ngwane.epms.repository.Userepms();
			var remoteObject:mx.rpc.remoting.RemoteObject = new mx.rpc.remoting.RemoteObject();
			user.username = usernameInput.text; 
			user.password = passwordInput.text;
			
			remoteObject.destination = "userOperations";
			remoteObject.addEventListener(FaultEvent.FAULT, userLoginFaultHandler);
			remoteObject.addEventListener(ResultEvent.RESULT, userLoginResultHandler);
			remoteObject.userLogin(user);
			//cursorManager.showCursor();
			cursorManager.setBusyCursor();
		}
		
		public static function userLoginFaultHandler(event:FaultEvent):void 
		{
			//Alert.show( ObjectUtil.toString(event.fault) );
			Alert.show("Login Failed Please Contact Your Administrator.","Failure", 4, null, null, Helper.noEntryImg);
		}
		
		public var message:String;
		
		[Bindable]
		public var loggedInUser : co.za.ngwane.epms.repository.Userepms = new co.za.ngwane.epms.repository.Userepms;
		
		public var etsSingleton:EPMSSingleton = EPMSSingleton.getInstance();
		
		public function userLoginResultHandler(event:ResultEvent) : void
		{
			//Alert.show("event.result is : "+event.result.toString());
			EPMSSingleton.getInstance().currentUser = new co.za.ngwane.epms.repository.Userepms;
			loggedInUser = (event.result as Userepms);
			
			if(loggedInUser != null)
			{	
				etsSingleton.currentUser = loggedInUser;
				etsSingleton.loggedIn = true;
				
				cleanup();
				
				if(loggedInUser.tempPassword)
				{
					changePassword();
				}
				else
				{
					cleanup();
					
					resetScreen();
					
					/*
					*loadLookUps()
					*/
					
					getAllCluster();
					getAllDir();
					getAllDept();
					getAllSections();
					getAllNdp();
					getAllProg();
					getAllUsers();
					getAllProjs();
					getAllOutcome();
					getAllPlans();
					getAllSysMod();
					
				} 
			}
			else
			{
				Alert.show("Please make sure your username and password are correct","User Not Found", 4, null, null, Helper.noEntryImg);
			}
			
			cursorManager.removeBusyCursor();
		}
		
		public function cleanup() : void
		{
			trace("Executing Cleanup at : "+new Date());
			EPMSSingleton.getInstance().clusterList = new ArrayCollection();
			EPMSSingleton.getInstance().clusterNameList = new ArrayCollection();
			
			EPMSSingleton.getInstance().dirList = new ArrayCollection();
			EPMSSingleton.getInstance().dirNameList = new ArrayCollection();
			
			EPMSSingleton.getInstance().deptList = new ArrayCollection();
			EPMSSingleton.getInstance().deptNameList = new ArrayCollection();
			
			EPMSSingleton.getInstance().sectionList = new ArrayCollection();
			EPMSSingleton.getInstance().sectionNameList = new ArrayCollection();
			
			EPMSSingleton.getInstance().ndpList = new ArrayCollection();
			EPMSSingleton.getInstance().ndpNameList = new ArrayCollection();
			
			EPMSSingleton.getInstance().progList = new ArrayCollection();
			EPMSSingleton.getInstance().progNameList = new ArrayCollection();
			
			EPMSSingleton.getInstance().usersList = new ArrayCollection();
			EPMSSingleton.getInstance().usersNameList = new ArrayCollection();
			
			EPMSSingleton.getInstance().projectList  = new ArrayCollection();
			EPMSSingleton.getInstance().projectNameList  = new ArrayCollection();
			
		}
		
		public function getAllPlans() : void
		{
			var remoteObject:mx.rpc.remoting.RemoteObject = new mx.rpc.remoting.RemoteObject();
			
			remoteObject.destination = "planOperations";
			remoteObject.addEventListener(FaultEvent.FAULT, getAllPlansFaultHandler);
			remoteObject.addEventListener(ResultEvent.RESULT, getAllPlansResultHandler);
			remoteObject.getAllPlans();
			cursorManager.setBusyCursor();
		}
		
		public static function getAllPlansFaultHandler(event:FaultEvent) : void 
		{
			//Alert.show( ObjectUtil.toString(event.fault) );
			Alert.show("Failed to load plans please contact your administrator if this continues.","Failure", 4, null, null,Helper.noEntryImg);
		}
		
		public var planList:ArrayCollection = EPMSSingleton.getInstance().planList;
		
		public function getAllPlansResultHandler(event:ResultEvent):void
		{
			EPMSSingleton.getInstance().planListFormatted = new ArrayCollection();
			//Alert.show("event.result: \n"+event.result);
			planList = (event.result as ArrayCollection);
			EPMSSingleton.getInstance().planList = planList;
			
			for each (var plan : co.za.ngwane.epms.repository.Plantbl in EPMSSingleton.getInstance().planList )
			{
				
				if(plan.budspend > 0)
				{
					plan.budspendClient = Helper.ZAR + plan.budspend.toFixed(2) ; 
				}
				else
				{
					plan.budspendClient = Helper.ZAR + plan.budspend; 
				}
				
				if(plan.budget > 0)
				{
					plan.budgetClient = Helper.ZAR + plan.budget.toFixed(2) ; 
				}
				else
				{
					plan.budgetClient = Helper.ZAR + plan.budget; 
				}
				
				
				EPMSSingleton.getInstance().planListFormatted.addItem(plan);
			}
			
			cursorManager.removeBusyCursor();
		}
		
		public function getAllOutcome():void
		{
			var remoteObject:mx.rpc.remoting.RemoteObject = new mx.rpc.remoting.RemoteObject();
			
			remoteObject.destination = "outcomeOperations";
			remoteObject.addEventListener(FaultEvent.FAULT, getAllOutcomeFaultHandler);
			remoteObject.addEventListener(ResultEvent.RESULT, getAllOutcomeResultHandler);
			remoteObject.getAll();
			cursorManager.setBusyCursor();
		}
		
		public static function getAllOutcomeFaultHandler(event:FaultEvent):void 
		{
			//Alert.show( ObjectUtil.toString(event.fault) );
			Alert.show("Failed to load outcomes please contact your administrator if this continues.","Failure", 4, null, null,Helper.noEntryImg);
		}
		
		public var outcomeList:ArrayCollection = EPMSSingleton.getInstance().outcomeList;
		
		public function getAllOutcomeResultHandler(event:ResultEvent):void
		{
			//Alert.show("event.result: \n"+event.result);
			outcomeList = (event.result as ArrayCollection);
			EPMSSingleton.getInstance().outcomeList = outcomeList;
			
			for each (var outcome : co.za.ngwane.epms.repository.Outcometbl in EPMSSingleton.getInstance().outcomeList )
			{
				EPMSSingleton.getInstance().outcomeNameList.addItem(outcome.name);
			}
			
			cursorManager.removeBusyCursor();
		}
		
		public function getAllProjs():void
		{
			var remoteObject:mx.rpc.remoting.RemoteObject = new mx.rpc.remoting.RemoteObject();
			
			remoteObject.destination = "projectOperations";
			remoteObject.addEventListener(FaultEvent.FAULT, getAllProjFaultHandler);
			remoteObject.addEventListener(ResultEvent.RESULT, getAllProjResultHandler);
			remoteObject.getAll();
			cursorManager.setBusyCursor();
		}
		
		public static function getAllProjFaultHandler(event:FaultEvent) : void 
		{
			//Alert.show( ObjectUtil.toString(event.fault) );
			Alert.show("Failed to load projects please contact your administrator if this continues.","Failure", 4, null, null, Helper.noEntryImg);
		}
		
		public var projectList:ArrayCollection = EPMSSingleton.getInstance().projectList;
		
		public function getAllProjResultHandler(event:ResultEvent):void
		{
			//Alert.show("event.result: \n"+event.result);
			projectList = (event.result as ArrayCollection);
			EPMSSingleton.getInstance().projectList = projectList;
			
			for each (var proj : co.za.ngwane.epms.repository.Projtbl in EPMSSingleton.getInstance().projectList )
			{
				EPMSSingleton.getInstance().projectNameList.addItem(proj.name);
			}
			
			cursorManager.removeBusyCursor();
		}
		
		public function getAllUsers():void
		{
			var remoteObject:mx.rpc.remoting.RemoteObject = new mx.rpc.remoting.RemoteObject();
			
			remoteObject.destination = "userOperations";
			remoteObject.addEventListener(FaultEvent.FAULT,getAllUsersFaultHandler);
			remoteObject.addEventListener(ResultEvent.RESULT, getAllUsersResultHandler);
			remoteObject.getAll();
			cursorManager.setBusyCursor();
		}
		
		public static function getAllUsersFaultHandler(event:FaultEvent) : void 
		{
			//Alert.show( ObjectUtil.toString(event.fault) );
			Alert.show("Failed to load users please contact your administrator if this continues.","Failure", 4, null, null,Helper.noEntryImg);
		}
		
		public var usersList:ArrayCollection = EPMSSingleton.getInstance().usersList;
		
		public function getAllUsersResultHandler(event:ResultEvent):void
		{
			//Alert.show("event.result: \n"+event.result);
			usersList = (event.result as ArrayCollection);
			EPMSSingleton.getInstance().usersList = usersList;
			
			for each (var user : co.za.ngwane.epms.repository.Userepms in EPMSSingleton.getInstance().usersList )
			{
				EPMSSingleton.getInstance().usersNameList.addItem(user.name);
			}
			cursorManager.removeBusyCursor();
		}
		
		public function getAllProg():void
		{
			var remoteObject:mx.rpc.remoting.RemoteObject = new mx.rpc.remoting.RemoteObject();
			
			remoteObject.destination = "programOperations";
			remoteObject.addEventListener(FaultEvent.FAULT, getAllProgFaultHandler);
			remoteObject.addEventListener(ResultEvent.RESULT, getAllProgResultHandler);
			remoteObject.getAll();
			cursorManager.setBusyCursor();
		}
		
		public static function getAllProgFaultHandler(event:FaultEvent) : void 
		{
			//Alert.show( ObjectUtil.toString(event.fault) );
			Alert.show("Failed to load programs please contact your administrator if this continues.","Failure", 4, null, null,Helper.noEntryImg);
		}
		
		public var progList:ArrayCollection = EPMSSingleton.getInstance().progList;
		
		public function getAllProgResultHandler(event:ResultEvent):void
		{
			//Alert.show("event.result: \n"+event.result);
			progList = (event.result as ArrayCollection);
			EPMSSingleton.getInstance().progList = progList;
			
			for each (var prog : co.za.ngwane.epms.repository.Progtbl in EPMSSingleton.getInstance().progList )
			{
				EPMSSingleton.getInstance().progNameList.addItem(prog.name);
			}
			cursorManager.removeBusyCursor();
		}
		
		public function getAllNdp():void
		{
			var remoteObject:mx.rpc.remoting.RemoteObject = new mx.rpc.remoting.RemoteObject();
			
			remoteObject.destination = "ndpOperations";
			remoteObject.addEventListener(FaultEvent.FAULT,  getAllNdpFaultHandler);
			remoteObject.addEventListener(ResultEvent.RESULT,  getAllNdpResultHandler);
			remoteObject.getAll();
			cursorManager.setBusyCursor();
		}
		
		public static function  getAllNdpFaultHandler(event:FaultEvent):void 
		{
			//Alert.show( ObjectUtil.toString(event.fault) );
			Alert.show("Failed to load ndp please contact your administrator if this continues.","Failure", 4, null, null, Helper.noEntryImg);
		}
		
		public var ndpList:ArrayCollection = EPMSSingleton.getInstance().ndpList;
		
		public function  getAllNdpResultHandler(event:ResultEvent):void
		{
			//Alert.show("event.result: \n"+event.result);
			ndpList = (event.result as ArrayCollection);
			EPMSSingleton.getInstance().ndpList = ndpList;
			
			for each (var ndp : co.za.ngwane.epms.repository.Ndp in EPMSSingleton.getInstance().ndpList )
			{
				EPMSSingleton.getInstance().ndpNameList.addItem(ndp.name);
			}
			
			cursorManager.removeBusyCursor();
		}
		
		public function getAllSections():void
		{
			var remoteObject:mx.rpc.remoting.RemoteObject = new mx.rpc.remoting.RemoteObject();
			
			remoteObject.destination = "sectionOperations";
			remoteObject.addEventListener(FaultEvent.FAULT, getAllSectionfaultHandler);
			remoteObject.addEventListener(ResultEvent.RESULT, getAllSectionResultHandler);
			remoteObject.getAll();
			cursorManager.setBusyCursor();
		}
		
		public static function getAllSectionfaultHandler(event:FaultEvent):void 
		{
			//Alert.show( ObjectUtil.toString(event.fault) );
			Alert.show("Failed to load sections please contact your administrator if this continues.","Failure", 4, null, null,Helper.noEntryImg);
		}
		
		public var sectionList:ArrayCollection = EPMSSingleton.getInstance().sectionList;
		
		public function getAllSectionResultHandler(event:ResultEvent):void
		{
			//Alert.show("event.result: \n"+event.result);
			sectionList = (event.result as ArrayCollection);
			EPMSSingleton.getInstance().sectionList = sectionList;
			
			for each (var section : co.za.ngwane.epms.repository.Sectiontbl in EPMSSingleton.getInstance().sectionList )
			{
				EPMSSingleton.getInstance().sectionNameList.addItem(section.name);
			}
			
			cursorManager.removeBusyCursor();
		}
		
		public function getAllDept():void
		{
			var remoteObject:mx.rpc.remoting.RemoteObject = new mx.rpc.remoting.RemoteObject();
			
			remoteObject.destination = "departmentOperations";
			remoteObject.addEventListener(FaultEvent.FAULT, getAllDeptFaultHandler);
			remoteObject.addEventListener(ResultEvent.RESULT, getAllDeptResultHandler);
			remoteObject.getAll();
			cursorManager.setBusyCursor();
		}
		
		public static function getAllDeptFaultHandler(event:FaultEvent):void 
		{
			//Alert.show( ObjectUtil.toString(event.fault) );
			Alert.show("Failed to load departments please contact your administrator if this continues.","Failure", 4, null, null,Helper.noEntryImg);
		}
		
		public var deptList:ArrayCollection = EPMSSingleton.getInstance().deptList;
		
		public function getAllDeptResultHandler(event:ResultEvent):void
		{
			//Alert.show("getAllDeptResultHandler event.result: \n"+event.result);
			deptList = (event.result as ArrayCollection);
			EPMSSingleton.getInstance().deptList = deptList;
			
			for each (var dept : co.za.ngwane.epms.repository.Dept in EPMSSingleton.getInstance().deptList )
			{
				EPMSSingleton.getInstance().deptNameList.addItem(dept.name);
			}
			
			cursorManager.removeBusyCursor();
		}
		
		public function getAllDir():void
		{
			var remoteObject:mx.rpc.remoting.RemoteObject = new mx.rpc.remoting.RemoteObject();
			
			remoteObject.destination = "directorateOperations";
			remoteObject.addEventListener(FaultEvent.FAULT, getAllDirfaultHandler);
			remoteObject.addEventListener(ResultEvent.RESULT, getAllDirResultHandler);
			remoteObject.getAll();
			cursorManager.setBusyCursor();
		}
		
		public static function getAllDirfaultHandler(event:FaultEvent):void 
		{
			//Alert.show( ObjectUtil.toString(event.fault) );
			Alert.show("Failed to load directorates please contact your administrator if this continues.","Failure", 4, null, null,Helper.noEntryImg);
		}
		
		public var dirList:ArrayCollection = EPMSSingleton.getInstance().dirList;
		
		public function getAllDirResultHandler(event:ResultEvent):void
		{
			//Alert.show("event.result: \n"+event.result);
			dirList = (event.result as ArrayCollection);
			EPMSSingleton.getInstance().dirList = dirList;
			
			for each (var dir : co.za.ngwane.epms.repository.Directorate in EPMSSingleton.getInstance().dirList )
			{
				EPMSSingleton.getInstance().dirNameList.addItem(dir.name);
			}
			cursorManager.removeBusyCursor();
		}
		
		public function getAllCluster():void
		{
			var remoteObject:mx.rpc.remoting.RemoteObject = new mx.rpc.remoting.RemoteObject();
			
			remoteObject.destination = "clusterOperations";
			remoteObject.addEventListener(FaultEvent.FAULT, getAllClusterFaultHandler);
			remoteObject.addEventListener(ResultEvent.RESULT, getAllClusterResultHandler);
			remoteObject.getAll();
			cursorManager.setBusyCursor();
		}
		
		public static function getAllClusterFaultHandler(event:FaultEvent) : void 
		{
			//Alert.show( ObjectUtil.toString(event.fault) );
			Alert.show("Failed to load clusters please contact your administrator if this continues.","Failure", 4, null, null,Helper.noEntryImg);
		}
		
		public var clusterList:ArrayCollection = EPMSSingleton.getInstance().clusterList;
		
		public function getAllClusterResultHandler(event:ResultEvent):void
		{
			//Alert.show("getAllClusterResultHandler event.result: \n"+event.result);
			clusterList = (event.result as ArrayCollection);
			EPMSSingleton.getInstance().clusterList = clusterList;
			
			for each (var cluster : Clustertbl in EPMSSingleton.getInstance().clusterList )
			{
				EPMSSingleton.getInstance().clusterNameList.addItem(cluster.name);
			}
			cursorManager.removeBusyCursor();
		}
		
		public function getAllSysMod() : void 
		{
			var remoteObject:mx.rpc.remoting.RemoteObject = new mx.rpc.remoting.RemoteObject();
			
			remoteObject.destination = "sysModOperations";
			remoteObject.addEventListener(FaultEvent.FAULT, getAllSysModFaultHandler);
			remoteObject.addEventListener(ResultEvent.RESULT, getAllSysModResultHandler);
			remoteObject.getAll();
			cursorManager.setBusyCursor();
		}
		
		public static function getAllSysModFaultHandler(event:FaultEvent) : void 
		{
			//Alert.show( ObjectUtil.toString(event.fault) );
			Alert.show("Failed to load plans please contact your administrator if this continues.","Failure", 4, null, null,Helper.noEntryImg);
		}
		
		public var sysModsList:ArrayCollection = EPMSSingleton.getInstance().sysModsList;
		
		public function getAllSysModResultHandler(event:ResultEvent):void
		{
			//Alert.show("event.result: \n"+event.result);
			sysModsList = (event.result as ArrayCollection);
			EPMSSingleton.getInstance().sysModsList = sysModsList;
			
			cursorManager.removeBusyCursor();
		}
		
		public function resetScreen() : void
		{
			//FlexGlobals.topLevelApplication.resetInstances();
			FlexGlobals.topLevelApplication.mainNavigator.selectedChild = FlexGlobals.topLevelApplication.successfullyLogin;
			clearInput();
		}
		
		public function clearInput():void
		{
			usernameInput.text = "";
			passwordInput.text = "";
		}
		
		public var forgottenPwdPopUp:ForgottenPwdPopup; 
		public var changePwdPopUp:ChangePwdPopup; 
		
		public function forgottenPassword() : void 
		{
			// show the popup
			Helper.editNameWindow=PopUpManager.createPopUp(this, ForgottenPwdPopup, true); 
			// cast to a nameEditorPopup
			forgottenPwdPopUp = ForgottenPwdPopup(Helper.editNameWindow); 
			// pass the popUp my DataGrid Item
		}
		
		public function changePassword() : void 
		{
			// show the popup
			Helper.editNameWindow=PopUpManager.createPopUp(this, ChangePwdPopup, true); 
			// cast to a nameEditorPopup
			changePwdPopUp = ChangePwdPopup(Helper.editNameWindow); 
			// pass the popUp my DataGrid Item
		}
		
	]]>
</fx:Script>

<fx:Declarations>
	<!-- Place non-visual elements (e.g., services, value objects) here -->
</fx:Declarations>
	
<mx:VBox horizontalCenter="0" verticalCenter="0">
	<mx:Canvas width="100%" height="100%">
		<!--<mx:Image horizontalCenter="0" verticalCenter="0" source="images/MFG_Logo.png" right="0"/>	-->
	</mx:Canvas>		
	<mx:Canvas width="400" height="175" backgroundColor="#5598B4" cornerRadius="10">
		<s:BorderContainer width="100%" height="100%"
						   backgroundImage="@Embed(source='file:/images/BackgroundImage7.JPG')">
		<mx:Form horizontalCenter="0" verticalCenter="0">
			<s:Label fontSize="14" fontWeight="bold" text="Fill in your username and password below"/>
			<mx:FormItem label="Username" required="true">
				<s:TextInput id="usernameInput" width="176" text="{Status.USERNAME}" typographicCase="default"/>
			</mx:FormItem>
			<mx:FormItem label="Password" required="true">
				<s:TextInput id="passwordInput" width="176" displayAsPassword="true"
							 text="{Status.PASSWORD}" typographicCase="default"/>
			</mx:FormItem>
			
			<mx:HBox horizontalAlign="center">	
				<mx:Canvas buttonMode="true" click="userLogin()" mouseChildren="false"
						   useHandCursor="true">
					<mx:Button id="bntLogin" width="10" height="10" click="userLogin()"
							   horizontalCenter="0" verticalCenter="0"/>
					<mx:Image source="@Embed('images/BtnLogin.png')"/>
				</mx:Canvas>					
				<mx:Canvas buttonMode="true" click="forgottenPassword()" mouseChildren="false"
						   useHandCursor="true">
					<mx:Image source="@Embed('images/BtnForgotPassword.png')"/>
				</mx:Canvas>
			</mx:HBox>	
		</mx:Form>
	</s:BorderContainer>
	</mx:Canvas>
</mx:VBox>	
</mx:Canvas>
