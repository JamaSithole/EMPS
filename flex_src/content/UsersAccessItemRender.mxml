<?xml version="1.0" encoding="utf-8"?>
<s:MXDataGridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" 
						  focusEnabled="true" creationComplete="init()" show="init()">
	<fx:Script>
		<![CDATA[
			import co.za.ngwane.epms.helper.EPMSSingleton;
			import co.za.ngwane.epms.helper.Helper;
			import co.za.ngwane.epms.repository.Userepms;
			
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.core.IFlexDisplayObject;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			public function init() : void
			{
				var user : Userepms = data as Userepms;
				
				if(EPMSSingleton.getInstance().userView)
				{
					userAccessView.text = EPMSSingleton.getInstance().view;
				}
				if(EPMSSingleton.getInstance().userDelete)
				{
					userAccessDel.text = EPMSSingleton.getInstance().deleteOrRemove;
				}
				
			}
			
			override protected function updateDisplayList(unscaledWidth:Number,unscaledHeight:Number):void{
				super.updateDisplayList(unscaledWidth,unscaledHeight);
				if(data == null)return;
			}
			
			public function viewSelectedUser() : void 
			{
				underConstruction();
			}
			
			public function editSelectedUser() : void
			{
				underConstruction();
			}
			
			public function delSelectedUser() : void
			{
				var user : co.za.ngwane.epms.repository.Userepms = data as co.za.ngwane.epms.repository.Userepms;
				EPMSSingleton.getInstance().selectedUser = user;
				Alert.yesLabel = "Yes";
				Alert.noLabel = "No";
				Alert.show("Are you sure you want to delete this user?", "User Delete ", 3, null, deleteUserClickHandler);
				
			}
			
			public function deleteUserClickHandler(event:CloseEvent) : void 
			{
				underConstruction();
			}
			
			//Show Under Construction Alert for Incomplete Functionality
			public function underConstruction():void
			{
				Alert.show("Functionality Not Available Yet!!!", "Under Construction", 4, null, null, Helper.noEntryImg);
			}
			
		]]>
	</fx:Script>
	<mx:Canvas horizontalScrollPolicy="off" width="100%" height="100%">
		<mx:HBox height="100%" horizontalCenter="0" verticalCenter="0" horizontalScrollPolicy="off" >
			<!--<mx:LinkButton click="viewSelectedUser()" id="userAccessView" includeInLayout="{EPMSSingleton.getInstance().userAccessView}"/>
			<mx:LinkButton click="delSelectedUser()" id="userAccessDel" includeInLayout="{EPMSSingleton.getInstance().userAccessDel}"/>
			-->
			
			<mx:HBox click="viewSelectedUser()" horizontalGap="5" useHandCursor="true" buttonMode="true" mouseChildren="false"
					 enabled="{EPMSSingleton.getInstance().userAccessView}">
				<mx:Image source="{Helper.viewIcon}" enabled="{EPMSSingleton.getInstance().userAccessView}"/>
				<mx:Text height="100%" id="userAccessView" enabled="{EPMSSingleton.getInstance().userAccessView}"/>
			</mx:HBox>
			
			<mx:HBox click="delSelectedUser()" horizontalGap="5" useHandCursor="true" buttonMode="true" mouseChildren="false"
					 enabled="{EPMSSingleton.getInstance().userAccessDel}">
				<mx:Image source="{Helper.deleteIcon}" enabled="{EPMSSingleton.getInstance().userAccessDel}"/>
				<mx:Text height="100%" id="userAccessDel" enabled="{EPMSSingleton.getInstance().userAccessDel}"/>
			</mx:HBox>
			
		</mx:HBox>
	</mx:Canvas>	
</s:MXDataGridItemRenderer>
