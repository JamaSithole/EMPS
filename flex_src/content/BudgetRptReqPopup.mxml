<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow  xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
			   creationComplete="init()" title="{EPMSSingleton.getInstance().pgTitle}"
			   close="cancel()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Style source="style/epms.css"/>
	
	<fx:Script>
		<![CDATA[
			import co.za.ngwane.epms.helper.EPMSSingleton;
			import co.za.ngwane.epms.repository.Clustertbl;
			import co.za.ngwane.epms.repository.Progtbl; EPMSSingleton
			import co.za.ngwane.epms.helper.Helper;
			import co.za.ngwane.epms.helper.Status;
			import co.za.ngwane.epms.helper.EPMSSingleton;
			import co.za.ngwane.epms.repository.Userepms;
			
			import flashx.textLayout.formats.Float;
			
			import mx.collections.ArrayCollection;
			import mx.containers.ViewStack;
			import mx.controls.Alert;
			import mx.controls.Text;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			import mx.utils.ObjectUtil;
			import spark.events.IndexChangeEvent;
			
			public function init() : void
			{
				PopUpManager.centerPopUp(this);
			}
			
			public function underConstruction():void
			{
				Alert.show("Functionality Not Available Yet!!!", "Under Construction", 4, null, null, Helper.noEntryImg);
			}
			
			public function cancel() : void
			{
				PopUpManager.removePopUp(this);
			}
			
			public var selectedProg : Progtbl = null;
			public function getSelectedProg(event:IndexChangeEvent):void
			{
				selectedProg = progInput.selectedItem;
			}
			
			public function doAllProg() : void
			{
				if(allProg.selected)
				{
					progInput.enabled = false;
					progInputLbl.enabled = false;
					progInput.includeInLayout = false;
					progInputLbl.includeInLayout = false;
				}
				else
				{
					progInput.enabled = true;
					progInputLbl.enabled = true;
					progInput.includeInLayout = true;
					progInputLbl.includeInLayout = true;
					progInput.prompt = "Select Program";
				}
			}
			
			public var errorMSG:String = new String();
			public function isValid() : Boolean
			{
				if(allProg.selected==true)
				{
					progName = "All";
				}
				if(selectedProg != null)
				{
					progName = selectedProg.name;
				}
				else
				{
					errorMSG += "Please specify a program.\n";
				}
				
				if(errorMSG.length > 3) 
				{
					return false;
				}
				else
				{
					return true;
				}
			}
			
			public var progName : String = "";
			public var tempName : String = "";
			
			public function  doRegRpt( rptType : String ):void
			{
				var errorFound = false;
				if(allProg.selected==true)
				{
					progName = "All";
				}
				else if(selectedProg != null)
				{
					progName = selectedProg.name;
				}
				else
				{
					Alert.show("Please specify a program.","Failure", 4, null, null, Helper.noEntryImg);
					errorFound = true
				}
				
				if(!errorFound)
				{
					
					var urlVariables : URLVariables = new URLVariables ();
				
					// from here one needs to determines rptType
					if(EPMSSingleton.getInstance().rptType == EPMSSingleton.getInstance().budgetRptTitle)
					{
						if(progName == "All")
						{
							urlVariables['templateName'] = 'Rpt0001';
						}
						else
						{
							urlVariables['templateName'] = 'Rpt0002';
						}
					}
					else if(EPMSSingleton.getInstance().rptType == EPMSSingleton.getInstance().scoringRptTitle)
					{
						if(progName == "All")
						{
							urlVariables['templateName'] = 'Rpt0003';
						}
						else
						{
							urlVariables['templateName'] = 'Rpt0004';
						}
					}
					
					urlVariables['program'] = progName;
					urlVariables['project'] = '%';
					urlVariables['outcome'] = '%';
					urlVariables['source'] = 'program';
					
					var req:URLRequest = new URLRequest("ReportToBrowser");
					
					req.method = URLRequestMethod.GET;
					req.data = urlVariables;
					
					navigateToURL(req, "_blank");
					
				}
				else
				{
					underConstruction();
				}
				
				cancel();
			}
			
		]]>
	</fx:Script>
	
	<mx:HBox width="100%" height="100%">
		<mx:Canvas  width="30%" height="100%"/>
		
		<mx:Form width="60%" height="100%">
			<mx:Spacer/>
			<s:Label text="{EPMSSingleton.getInstance().pgHeader}" fontWeight="bold" textAlign="center"/>
			
			<mx:FormItem>
				<s:CheckBox label="All Programs" change="doAllProg()" id="allProg"/>
			</mx:FormItem>

			<mx:FormItem label="Program:" id="progInputLbl">
				<s:DropDownList id="progInput" width="186" labelField="name" dataProvider="{EPMSSingleton.getInstance().progList}" prompt="Select Program"
								change="getSelectedProg(event)"/>
			</mx:FormItem>
			
			<mx:HBox width="50%" horizontalAlign="center" paddingLeft="70">
				<mx:Canvas id="submitBT" useHandCursor="true" buttonMode="true" mouseChildren="false" click="doRegRpt(EPMSSingleton.getInstance().rptType)">
					<mx:Image source="@Embed('images/BtnSubmit.png')"/>
				</mx:Canvas>
				<mx:Canvas id="refreshBT" useHandCursor="true" buttonMode="true" mouseChildren="false" click="cancel()">
					<mx:Image source="@Embed('images/BtnCancel.png')"/>
				</mx:Canvas>
			</mx:HBox>
		</mx:Form>
		
		<mx:Canvas  width="10%" height="100%"/>
	</mx:HBox>
	
</s:TitleWindow >
