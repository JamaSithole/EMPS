<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow  xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
				creationComplete="init()" title="Add Outcome"
				close="cancel()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		
	</fx:Declarations>
	
	<fx:Style source="style/epms.css"/>
	
	<fx:Script>
		<![CDATA[
			import co.za.ngwane.epms.helper.EPMSSingleton;
			import co.za.ngwane.epms.repository.Outcometbl; EPMSSingleton
			import co.za.ngwane.epms.helper.Helper;
			import co.za.ngwane.epms.helper.Status;
			import co.za.ngwane.epms.helper.EPMSSingleton;
			import co.za.ngwane.epms.repository.Userepms;
			
			import flashx.textLayout.formats.Float;
			
			import mx.collections.ArrayCollection;
			import mx.containers.ViewStack;
			import mx.controls.Alert;
			import mx.controls.Text;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			import mx.utils.ObjectUtil;
			
			import spark.events.IndexChangeEvent;
			
			public function init() : void
			{
				PopUpManager.centerPopUp(this);
			}
			
			public function cancel() : void
			{
				PopUpManager.removePopUp(this);
			}
			
			public function seacrh():void
			{
				
			}
			
			public var errorMSG:String = new String();
			public function isValid():Boolean
			{
				if(selectedProj == "")
				{
					errorMSG += "Please Select Project.\n";
				}
				if(nameInput.text == "")
				{
					errorMSG += "Please Enter Name.\n";
				}
				if(descInput.text == "")
				{
					errorMSG += "Please Enter Description.\n";
				}
				
				if(errorMSG.length > 3) 
				{
					return false;
				}
				else
				{
					return true;
				}
			}
			
			public var selectedProj : String = "";
			public function getSelectedProj(event:IndexChangeEvent):void
			{
				selectedProj = projInput.selectedItem;
				EPMSSingleton.getInstance().selectedProj = projInput.selectedItem;
			}
			
			public function checkBlanace() : Boolean
			{
				var allocBudget : Number = parseFloat(alocatedBudget.text); 
				if((EPMSSingleton.getInstance().selectedProj.totbud  - EPMSSingleton.getInstance().selectedProj.budspend) < allocBudget){
					Alert.show("Cannot allocate budget more than available");
					return false;
					
				}
				return true;
			}
			
			public function doSubmitOutcome():void
			{
				if(isValid()) 
				{
					var outcome : co.za.ngwane.epms.repository.Outcometbl = new co.za.ngwane.epms.repository.Outcometbl();
					var remoteObject:mx.rpc.remoting.RemoteObject = new mx.rpc.remoting.RemoteObject();
					
					outcome.name = nameInput.text;
					outcome.description = descInput.text;
					outcome.abudget = parseFloat(alocatedBudget.text);
					//outcome.owner = selectedOwner;
					if(checkBlanace()){
						remoteObject.destination = "outcomeOperations";
						remoteObject.addOutcome(outcome, selectedProj,selectedOwner);
						remoteObject.addEventListener(FaultEvent.FAULT, addOutFaultHandler);
						remoteObject.addEventListener(ResultEvent.RESULT, addOutResultHandler);
						cursorManager.setBusyCursor();
					}
					
				}
				else
				{
					Alert.show(errorMSG,"Validation Failure", 4, null, null, Helper.noEntryImg);
					errorMSG = "";
				}
			}
			
			public function addOutResultHandler(event:ResultEvent):void
			{
				//Alert.show("event.result is : "+event.result.toString());
				var result : Outcometbl = event.result as Outcometbl;
				if(result.id > 0)
				{	
					Alert.show("Outcome added successfully.","Successful", 4, null, null,Helper.accept);
					cancel();
					clearForm();
					EPMSSingleton.getInstance().outcomeList.addItem(result);
					//FlexGlobals.topLevelApplication.usersContent.userssVS.getAllUsers();
				}
				else
				{
					Alert.show(result.errorMessage,"Error", 4, null, null,Helper.noEntryImg);
				}
				cursorManager.removeBusyCursor();
			}
			
			var dotSeparator : String = ".";
			
			public function clearForm() : void
			{
				nameInput.text = "";
			}
			
			public static function addOutFaultHandler(event:FaultEvent):void 
			{
				//Alert.show( ObjectUtil.toString(event.fault) );
				Alert.show("Failed to add outcome.","Failure", 4, null, null,Helper.noEntryImg);
			}
			
			public static function faultHandler(event:FaultEvent):void 
			{
				//Alert.show( ObjectUtil.toString(event.fault) );
				Alert.show("Login Failed Please Contact Your Administrator.","Failure", 4, null, null, Helper.noEntryImg);
			}
			public var selectedOwner : String = "";
			public function getSelectedOwner(event:IndexChangeEvent) : void
			{
				selectedOwner = ownerInput.selectedItem;
			}
			
		]]>
	</fx:Script>
	
	<mx:HBox width="100%" height="100%">
		<mx:Canvas  width="30%" height="100%"/>
		
		<mx:Form width="60%" height="100%">
			<mx:Spacer/>
			<s:Label text="Enter Outcome's Info " fontWeight="bold" textAlign="center"/>
			<mx:FormItem label="Name:" >
				<s:TextInput id="nameInput" width="220"/>
			</mx:FormItem>
			<mx:FormItem label="Description">
				<s:TextArea id="descInput" width="220" height="61"/>
			</mx:FormItem>
			<mx:FormItem label="Project">
				<s:DropDownList id="projInput" width="220" dataProvider="{EPMSSingleton.getInstance().projectNameList}" prompt="Select Project"
								change="getSelectedProj(event)" />
			</mx:FormItem>
			<mx:FormItem label="Owner:">
				<s:DropDownList id="ownerInput" width="160" dataProvider="{EPMSSingleton.getInstance().usersNameList}" prompt="Select Owner"
								change="getSelectedOwner(event)"/>
			</mx:FormItem>
			
			<mx:FormItem label="Budget Allocated">
				<s:TextInput id="alocatedBudget" width="160" />
			</mx:FormItem>
			<mx:FormItem label="Available Budget">
				<s:TextInput id="budegtAvailable" width="160" text=" {EPMSSingleton.getInstance().selectedProj.budAvailClient}" enabled="false" />
			</mx:FormItem>
			
			<mx:HBox width="50%" horizontalAlign="center" paddingLeft="70">
				<mx:Canvas id="submitBT" useHandCursor="true" buttonMode="true" mouseChildren="false" click="doSubmitOutcome()">
					<mx:Image source="@Embed('images/BtnSubmit.png')"/>
				</mx:Canvas>
				<mx:Canvas id="refreshBT" useHandCursor="true" buttonMode="true" mouseChildren="false" click="cancel()">
					<mx:Image source="@Embed('images/BtnCancel.png')"/>
				</mx:Canvas>
			</mx:HBox>
		</mx:Form>
		
		<mx:Canvas  width="10%" height="100%"/>
	</mx:HBox>
	
</s:TitleWindow >
