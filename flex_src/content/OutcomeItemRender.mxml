<?xml version="1.0" encoding="utf-8"?>
<s:MXDataGridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" 
						  focusEnabled="true" creationComplete="init()" show="init()">
	<fx:Script>
		<![CDATA[
			import co.za.ngwane.epms.helper.EPMSSingleton;
			import co.za.ngwane.epms.helper.Helper;
			import co.za.ngwane.epms.repository.Outcometbl;
			import co.za.ngwane.epms.repository.Userepms;
			
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.core.IFlexDisplayObject;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			public function init() : void
			{
				var outcome : Outcometbl = data as Outcometbl;
				
				if(EPMSSingleton.getInstance().outcomeView)
				{
					outcomeView.text = EPMSSingleton.getInstance().view;
				}
				if(EPMSSingleton.getInstance().outcomeUpdate)
				{
					outcomeEdit.text = EPMSSingleton.getInstance().edit;
				}
				if(EPMSSingleton.getInstance().outcomeDelete)
				{
					outcomeDelete.text = EPMSSingleton.getInstance().deleteOrRemove;
				}
				if(EPMSSingleton.getInstance().outcomeAdd)
				{
					outputAdd.text = EPMSSingleton.getInstance().addOutput;
				}
			}
			
			override protected function updateDisplayList(unscaledWidth:Number,unscaledHeight:Number) : void
			{
				super.updateDisplayList(unscaledWidth,unscaledHeight);
				if(data == null)return;
			}
			
			public var loadPopUp:IFlexDisplayObject; 
			//public var myPopUp:AddUser; 
			
			public var addOutputPopup : AddOutputPopup; 
			
			public function addOutput() : void
			{
				var outcome : Outcometbl = data as Outcometbl;
				EPMSSingleton.getInstance().selectedOutcome = outcome;
				
				if(EPMSSingleton.getInstance().outputAdd)
				{
					Helper.editNameWindow=PopUpManager.createPopUp(FlexGlobals.topLevelApplication.successfullyLogin, AddOutputPopup, true); 
					// cast to a nameEditorPopup
					addOutputPopup = AddOutputPopup(Helper.editNameWindow); 
				}
				else
				{
					Alert.show("You have no permission to add output","Permission Error", 4, null, null,Helper.noEntryImg);
				}
			}
			
			public function viewSelectedOutcome() : void 
			{
				underConstruction();
			}
			
			public function editSelectedOutcome() : void
			{
				underConstruction();
			}
			
			public function delSelectedOutcome() : void
			{
				var user : co.za.ngwane.epms.repository.Userepms = data as co.za.ngwane.epms.repository.Userepms;
				EPMSSingleton.getInstance().selectedUser = user;
				Alert.yesLabel = "Yes";
				Alert.noLabel = "No";
				Alert.show("Are you sure you want to delete this outcome?", "Outcome Delete ", 3, null, deleteOutcomeHandler);
				
			}
			
			public function deleteOutcomeHandler(event:CloseEvent) : void 
			{
				underConstruction();
			}
			
			//Show Under Construction Alert for Incomplete Functionality
			public function underConstruction():void
			{
				Alert.show("Functionality Not Available Yet!!!", "Under Construction", 4, null, null, Helper.noEntryImg);
			}
			
		]]>
	</fx:Script>
	<mx:Canvas horizontalScrollPolicy="off" width="100%" height="100%">
		<mx:HBox height="100%" horizontalCenter="0" verticalCenter="0" horizontalScrollPolicy="off" >
			
			<mx:HBox click="addOutput()" horizontalGap="5" useHandCursor="true" buttonMode="true" mouseChildren="false"
					 includeInLayout="{EPMSSingleton.getInstance().outputAdd}">
				<mx:Image source="{Helper.addIcon}" includeInLayout="{EPMSSingleton.getInstance().outputAdd}"/>
				<mx:Text height="100%" id="outputAdd" includeInLayout="{EPMSSingleton.getInstance().outputAdd}"/>
			</mx:HBox>
			
			<mx:HBox click="viewSelectedOutcome()" horizontalGap="5" useHandCursor="true" buttonMode="true" mouseChildren="false"
					 includeInLayout="{EPMSSingleton.getInstance().outcomeView}">
				<mx:Image source="{Helper.viewIcon}" includeInLayout="{EPMSSingleton.getInstance().outcomeView}"/>
				<mx:Text height="100%" id="outcomeView" includeInLayout="{EPMSSingleton.getInstance().outcomeView}"/>
			</mx:HBox>
			
			<mx:HBox click="editSelectedOutcome()" horizontalGap="5" useHandCursor="true" buttonMode="true" mouseChildren="false"
					 includeInLayout="{EPMSSingleton.getInstance().outcomeUpdate}">
				<mx:Image source="{Helper.editIcon}" includeInLayout="{EPMSSingleton.getInstance().outcomeUpdate}"/>
				<mx:Text height="100%" id="outcomeEdit" includeInLayout="{EPMSSingleton.getInstance().outcomeUpdate}" />
			</mx:HBox>
			
			<mx:HBox click="delSelectedOutcome()" horizontalGap="5" useHandCursor="true" buttonMode="true" mouseChildren="false"
					 includeInLayout="{EPMSSingleton.getInstance().outcomeDelete}"> 
				<mx:Image source="{Helper.deleteIcon}" includeInLayout="{EPMSSingleton.getInstance().outcomeDelete}"/>
				<mx:Text id="outcomeDelete" height="100%" includeInLayout="{EPMSSingleton.getInstance().outcomeDelete}"/>
			</mx:HBox>	
		</mx:HBox>
	</mx:Canvas>	
</s:MXDataGridItemRenderer>
