<?xml version="1.0" encoding="utf-8"?>
<s:MXDataGridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" 
						  focusEnabled="true" creationComplete="init()" show="init()">
	<fx:Script>
		<![CDATA[
			import co.za.ngwane.epms.helper.EPMSSingleton;
			import co.za.ngwane.epms.helper.Helper;
			import co.za.ngwane.epms.repository.Clustertbl;
			import co.za.ngwane.epms.repository.Userepms;
			
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.core.IFlexDisplayObject;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			public function init() : void
			{
				if(EPMSSingleton.getInstance().clusterView)
				{
					clusterView.text = EPMSSingleton.getInstance().view;
				}
				if(EPMSSingleton.getInstance().clusterUpdate)
				{
					clusterEdit.text = EPMSSingleton.getInstance().edit;
				}
				if(EPMSSingleton.getInstance().clusterDelete)
				{
					clusterDelete.text = EPMSSingleton.getInstance().deleteOrRemove;
				}
			}
			
			override protected function updateDisplayList(unscaledWidth:Number,unscaledHeight:Number) : void {
				super.updateDisplayList(unscaledWidth,unscaledHeight);
				if (data == null) return;
			}
			
			public function viewSelectedCluster() : void 
			{
				underConstruction();
			}
			
			public function editSelectedCluster() : void
			{
				underConstruction();
			}
			
			public function delSelectedCluster() : void
			{
				var cluster : co.za.ngwane.epms.repository.Clustertbl = data as co.za.ngwane.epms.repository.Clustertbl;
				EPMSSingleton.getInstance().selectedCluster = cluster;
				Alert.yesLabel = "Yes";
				Alert.noLabel = "No";
				Alert.show("Are you sure you want to delete this cluster?", "Cluster Delete ", 3, null, deleteClusterHandler);
				
			}
			
			public function deleteClusterHandler(event:CloseEvent) : void 
			{
				underConstruction();
			}
			
			public function maintainSelectedUser() : void
			{
				underConstruction();
			}
			
			public function underConstruction():void
			{
				Alert.show("Functionality Not Available Yet!!!", "Under Construction", 4, null, null, Helper.noEntryImg);
			}
			
		]]>
	</fx:Script>
	<mx:Canvas horizontalScrollPolicy="off" width="100%" height="100%">
		<mx:HBox height="100%" horizontalCenter="0" verticalCenter="0" horizontalScrollPolicy="off" >
			<!--
			<mx:LinkButton click="viewSelectedCluster()" id="clusterView" includeInLayout="{EPMSSingleton.getInstance().clusterView}"/>
			<mx:LinkButton click="editSelectedCluster()" id="clusterEdit" includeInLayout="{EPMSSingleton.getInstance().clusterUpdate}"/>
			<mx:LinkButton click="delSelectedCluster()" id="clusterDelete" includeInLayout="{EPMSSingleton.getInstance().clusterDelete}"/>
			-->
			
			
			<mx:HBox click="viewSelectedCluster()" horizontalGap="5" useHandCursor="true" buttonMode="true" mouseChildren="false"
					 includeInLayout="{EPMSSingleton.getInstance().clusterView}">
				<mx:Image source="{Helper.viewIcon}" includeInLayout="{EPMSSingleton.getInstance().clusterView}"/>
				<mx:Text height="100%" id="clusterView" includeInLayout="{EPMSSingleton.getInstance().clusterView}"/>
			</mx:HBox>
			
			<mx:HBox click="editSelectedCluster()" horizontalGap="5" useHandCursor="true" buttonMode="true" mouseChildren="false"
					 includeInLayout="{EPMSSingleton.getInstance().clusterUpdate}">
				<mx:Image source="{Helper.editIcon}" includeInLayout="{EPMSSingleton.getInstance().clusterUpdate}"/>
				<mx:Text height="100%" id="clusterEdit" includeInLayout="{EPMSSingleton.getInstance().clusterUpdate}"/>
			</mx:HBox>
			
			<mx:HBox click="delSelectedCluster()" horizontalGap="5" useHandCursor="true" buttonMode="true" mouseChildren="false"
					 includeInLayout="{EPMSSingleton.getInstance().projDelete}"> 
				<mx:Image source="{Helper.deleteIcon}" includeInLayout="{EPMSSingleton.getInstance().clusterDelete}"/>
				<mx:Text id="clusterDelete" height="100%" includeInLayout="{EPMSSingleton.getInstance().clusterDelete}"/>
			</mx:HBox>	
			
		</mx:HBox>
	</mx:Canvas>	
</s:MXDataGridItemRenderer>
